name: "CI - Features"
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      matrix:
        features: [
            "anaconda",
            "aws-cli",
            "azure-cli",
            "common-utils",
            "conda",
            "desktop-lite",
            "docker-outside-of-docker",
            "docker-in-docker",
            "dotnet",
            "git",
            "git-lfs",
            "github-cli",
            "go",
            "hugo",
            "java",
            "kubectl-helm-minikube",
            "node",
            "nvidia-cuda",
            "oryx",
            "php",
            "powershell",
            "python",
            "ruby",
            "rust",
            "sshd",
            "terraform",
            "nix",
        ]
        baseImage:
          [
            "ubuntu:focal",
            "ubuntu:jammy",
            "debian:11",
            "debian:12",
            "mcr.microsoft.com/devcontainers/base:ubuntu",
            "mcr.microsoft.com/devcontainers/base:debian",
            "mcr.microsoft.com/devcontainers/base:noble"
          ]
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test  scenarios ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-scenarios:
    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      matrix:
        features: [
            "anaconda",
            "aws-cli",
            "azure-cli",
            "common-utils",
            "conda",
            "desktop-lite",
            "docker-outside-of-docker",
            "docker-in-docker",
            "dotnet",
            "git",
            "git-lfs",
            "github-cli",
            "go",
            "hugo",
            "java",
            "kubectl-helm-minikube",
            "node",
            "nvidia-cuda",
            "oryx",
            "php",
            "powershell",
            "python",
            "ruby",
            "rust",
            "sshd",
            "terraform",
            "nix",
        ]
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing '${{ matrix.features }}' scenarios"
        run: devcontainer features  ${{ matrix.features }} autogenerated  .

  test-global:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: " global scenarios"
        run: devcontainer features  --global-scenarios-only .
