{
    "id": "nix",
    "version": "1.3.1",
    "name": "Nix Package Manager",
    "documentationURL": "https://github.com/devcontainers/features/tree/main/src/nix",
    "description": "Installs the Nix package manager and optionally a set of packages.",
    "options": {
        "version": {
            "type": "string",
            "proposals": [
                "latest",
                "2.11"
            ],
            "default": "latest",
            "description": "Version of Nix to install."
        },
        "multiUser": {
            "type": "boolean",
            "default": true,
            "description": "Perform a multi-user install (instead of single user)"
        },
        "packages": {
            "type": "string",
            "default": "",
            "description": "Optional comma separated list of Nix packages to install in profile."
        },
        "useAttributePath": {
            "type": "boolean",
            "default": false,
            "description": "Enable this option to use exact attribute path of the package in the Nixpkgs repository, aligning with the nix-env -iA command."
        },
        "flakeUri": {
            "type": "string",
            "default": "",
            "description": "Optional URI to a Nix Flake to install in profile."
        },
        "extraNixConfig": {
            "type": "string",
            "default": "",
            "description": "Optional comma separated list of extra lines to add to /etc/nix/nix.conf."
        }
    },
    "customizations": {
        "vscode": {
            "settings": {
                "github.copilot.chat.codeGeneration.instructions": [
                    {
                        "text": "This dev container includes the Nix package manager pre-installed and available on the `PATH`. Currently `flakeUri` works best with a remote URI (e.g., `github:nixos/nixpkgs/nixpkgs-unstable#hello`) as local files need to be in the image. The dev container supports two installation models for Nix: multi-user and single user. Multi-user is the default."
                    }
                ]
            }
        }
    },
    "installsAfter": [
        "ghcr.io/devcontainers/features/common-utils"
    ],
    "containerEnv": {
        "PATH": "/nix/var/nix/profiles/default/bin:/nix/var/nix/profiles/default/sbin:${PATH}"
    },
    "mounts": [
        {
            "source": "nix-store-${devcontainerId}",
            "target": "/nix",
            "type": "volume"
        }
    ],
    "entrypoint": "/usr/local/share/nix-entrypoint.sh"
}
